{"name": "测试数据：上游业务获取", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 8 column 1 (char 7)", "trace": "self = <testcases.meetingclass_test_web.test_zhs_createMeetCourse.Test_creatMeetCourse object at 0x0000011E3EAED190>\nlogin_fixture_teacher = <Response [200]>\n\n    @allure.story(\"用例--创建见面课\")\n    @allure.description(\"该用例是针对创建见面课\")\n    @allure.issue(\"https://hikeservice.zhihuishu.com/student/course/aided/getMyCourseLis\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://hikeservice.zhihuishu.com/student/course/aided/getMyCourseLis\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\n        \"测试数据：上游业务获取\")\n    @pytest.mark.single\n    # @pytest.mark.parametrize(\"id, new_password, new_telephone, new_sex, new_address, \"\n    #                          \"except_result, except_code, except_msg\",\n    #                          api_data[\"test_update_user\"])\n    # @pytest.mark.usefixtures(\"Get_courseId\")\n    def test_zhs_creatMeetCourse(self, login_fixture_teacher):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        # login_fixture前置登录\n        user_info = login_fixture_teacher\n        uuid = user_info.json().get(\"uuid\")\n        account = user_info.request.body[8:19]\n        step_login(account, uuid)\n        cookies = add_cookies(requests.utils.dict_from_cookiejar(user_info.cookies))\n        result_get_courseInfo_teacher = get_courseInfo_teacher(uuid,\n                                                               cookies=cookies)\n    \n        assert result_get_courseInfo_teacher.response.status_code == 200\n        courseList = result_get_courseInfo_teacher.response.json()[\"rt\"][\"courseList\"]\n        courseId = courseList[randomRangeNum(0, len(courseList) - 1)][\"courseId\"]\n        print(courseId)\n        result_getStartingMeetCourseList = getStartingMeetCourseList(uuid, courseId,\n                                                                     cookies=cookies)\n        assert result_getStartingMeetCourseList.response.status_code == 200\n        if result_getStartingMeetCourseList.response.json()[\"rt\"] != []:\n            logger.info(\"有正在开启的见面课\")\n        else:\n            result_getUserRoleByCourseId = getUserRoleByCourseId(uuid, courseId,\n                                                                 cookies=cookies)\n            assert result_getUserRoleByCourseId.response.status_code == 200\n            # t = result_getUserRoleByCourseId.response.json()[\"rt\"]\n            if result_getUserRoleByCourseId.response.json()[\"rt\"] == 2:\n                logger.info(\"该老师无权限开启见面课\")\n            else:\n>               result_getRecruitIdByCourseId = getRecruitIdByCourseId(courseId, cookies=cookies)\n\ntest_zhs_createMeetCourse.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\operation\\course\\course.py:71: in getRecruitIdByCourseId\n    result.msg = res.json()\n..\\..\\venv\\lib\\site-packages\\requests\\models.py:897: in json\n    return complexjson.loads(self.text, **kwargs)\nC:\\Users\\able\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nC:\\Users\\able\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000011E3E5B52E0>\ns = '\\n\\n\\n\\n\\n\\n\\n<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\"UTF-8\">\\n    <meta name=\"viewport\" content=\"width=d...) {\\n                    holder.hide();\\n                });\\n            });\\n        }\\n    };\\n</script>\\n</html>\\n'\nidx = 7\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 8 column 1 (char 7)\n\nC:\\Users\\able\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\decoder.py:355: JSONDecodeError"}, "description": "该用例是针对创建见面课", "steps": [{"name": "前置登录步骤 ==>> 用户登录", "status": "passed", "parameters": [{"name": "account", "value": "'13122285260'"}, {"name": "uuid", "value": "'Vv45Mker'"}], "start": 1624419333805, "stop": 1624419333805}], "attachments": [{"name": "log", "source": "0db433ed-74db-4321-a9a4-ac22135f1e36-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "05d6bcfe-390c-4868-a351-3df3b1e9f44a-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "170cc0a5-f57f-4e11-93f7-991e51a4c1ce-attachment.txt", "type": "text/plain"}], "start": 1624419333805, "stop": 1624419334723, "uuid": "3bb60b36-4fa7-4a4f-9183-475356d7f806", "historyId": "a268dcb98763c78175a966190b2aa29a", "testCaseId": "866f21b9f3e453f67d1e9e06c5d996f2", "fullName": "testcases.meetingclass_test_web.test_zhs_createMeetCourse.Test_creatMeetCourse#test_zhs_creatMeetCourse", "labels": [{"name": "story", "value": "用例--创建见面课"}, {"name": "epic", "value": "业务流程测试"}, {"name": "feature", "value": "见面课模块"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.meetingclass_test_web"}, {"name": "suite", "value": "test_zhs_createMeetCourse"}, {"name": "subSuite", "value": "Test_creatMeetCourse"}, {"name": "host", "value": "DESKTOP-FRVNKTB"}, {"name": "thread", "value": "13872-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.meetingclass_test_web.test_zhs_createMeetCourse"}], "links": [{"type": "test_case", "url": "https://hikeservice.zhihuishu.com/student/course/aided/getMyCourseLis", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://hikeservice.zhihuishu.com/student/course/aided/getMyCourseLis", "name": "点击，跳转到对应BUG的链接地址"}]}