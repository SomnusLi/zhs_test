{"name": "test_zhs_aidMenuAuth", "status": "broken", "statusDetails": {"message": "TypeError: expected string or bytes-like object", "trace": "@pytest.fixture(scope=\"session\")\n    def login_fixture():\n        account = base_data[\"init_user_login_student\"][\"account\"]\n        password = base_data[\"init_user_login_student\"][\"password\"]\n        print(account)\n        print(password)\n        payload = {\n            \"account\": account,\n            \"password\": password\n        }\n        header = {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n        cookies = {\"Hm_lvt_0a1b7151d8c580761c3aef32a3d501c6\": int(time.time()),\n                   \"Hm_lpvt_0a1b7151d8c580761c3aef32a3d501c6\": int(time.time()), \"source\": -1}\n>       login_info = user.login(data=payload, headers=header, cookies=cookies)\n\n..\\conftest.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\api\\user\\user.py:18: in login\n    return self.post(\"https://passport.zhihuishu.com/user/validateAccountAndPassword\", **kwargs)\n..\\..\\core\\rest_client.py:16: in post\n    return self.request(url, \"POST\", data, json, **kwargs)\n..\\..\\core\\rest_client.py:37: in request\n    return requests.post(url, data, json, **kwargs)\n..\\..\\venv\\lib\\site-packages\\requests\\api.py:116: in post\n    return request('post', url, data=data, json=json, **kwargs)\n..\\..\\venv\\lib\\site-packages\\requests\\api.py:60: in request\n    return session.request(method=method, url=url, **kwargs)\n..\\..\\venv\\lib\\site-packages\\requests\\sessions.py:510: in request\n    prep = self.prepare_request(req)\n..\\..\\venv\\lib\\site-packages\\requests\\sessions.py:443: in prepare_request\n    p.prepare(\n..\\..\\venv\\lib\\site-packages\\requests\\models.py:315: in prepare\n    self.prepare_cookies(cookies)\n..\\..\\venv\\lib\\site-packages\\requests\\models.py:572: in prepare_cookies\n    cookie_header = get_cookie_header(self._cookies, self)\n..\\..\\venv\\lib\\site-packages\\requests\\cookies.py:142: in get_cookie_header\n    jar.add_cookie_header(r)\nC:\\Users\\able\\AppData\\Local\\Programs\\Python\\Python39\\lib\\http\\cookiejar.py:1367: in add_cookie_header\n    attrs = self._cookie_attrs(cookies)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <RequestsCookieJar[Cookie(version=0, name='Hm_lpvt_0a1b7151d8c580761c3aef32a3d501c6', value=1623388831, port=None, por...ue, secure=False, expires=None, discard=True, comment=None, comment_url=None, rest={'HttpOnly': None}, rfc2109=False)]>\ncookies = [Cookie(version=0, name='Hm_lpvt_0a1b7151d8c580761c3aef32a3d501c6', value=1623388831, port=None, port_specified=False,...rue, secure=False, expires=None, discard=True, comment=None, comment_url=None, rest={'HttpOnly': None}, rfc2109=False)]\n\n    def _cookie_attrs(self, cookies):\n        \"\"\"Return a list of cookie-attributes to be returned to server.\n    \n        like ['foo=\"bar\"; $Path=\"/\"', ...]\n    \n        The $Version attribute is also added when appropriate (currently only\n        once per request).\n    \n        \"\"\"\n        # add cookies in order of most specific (ie. longest) path first\n        cookies.sort(key=lambda a: len(a.path), reverse=True)\n    \n        version_set = False\n    \n        attrs = []\n        for cookie in cookies:\n            # set version of Cookie header\n            # XXX\n            # What should it be if multiple matching Set-Cookie headers have\n            #  different versions themselves?\n            # Answer: there is no answer; was supposed to be settled by\n            #  RFC 2965 errata, but that may never appear...\n            version = cookie.version\n            if not version_set:\n                version_set = True\n                if version > 0:\n                    attrs.append(\"$Version=%s\" % version)\n    \n            # quote cookie value if necessary\n            # (not for Netscape protocol, which already has any quotes\n            #  intact, due to the poorly-specified Netscape Cookie: syntax)\n            if ((cookie.value is not None) and\n>               self.non_word_re.search(cookie.value) and version > 0):\nE               TypeError: expected string or bytes-like object\n\nC:\\Users\\able\\AppData\\Local\\Programs\\Python\\Python39\\lib\\http\\cookiejar.py:1326: TypeError"}, "description": "获取用户权限", "attachments": [{"name": "log", "source": "cf7a6d4b-bd42-4d77-9d5a-68b1716d1e96-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "39de0405-72d4-403d-b710-e7d2b45473c8-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "3a1ac9d5-34f0-46bf-aff6-8605f54f3f5a-attachment.txt", "type": "text/plain"}], "start": 1623388831365, "stop": 1623388831365, "uuid": "1e9f2f3b-76da-4747-9109-14f6f1e98067", "historyId": "07b343fd8b0d5e8fcf6e59fb4fbcaf4d", "testCaseId": "0c2f78e741ff6a76dc0bbb716c2445c6", "fullName": "testcases.user.test_zhs_aidMenuAuth.TestzhsLogin#test_zhs_aidMenuAuth", "labels": [{"name": "story", "value": "用例--获取用户权限"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "severity", "value": "trivial"}, {"name": "feature", "value": "获取用户信息模块"}, {"name": "parentSuite", "value": "testcases.user"}, {"name": "suite", "value": "test_zhs_aidMenuAuth"}, {"name": "subSuite", "value": "TestzhsLogin"}, {"name": "host", "value": "DESKTOP-FRVNKTB"}, {"name": "thread", "value": "16568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.user.test_zhs_aidMenuAuth"}], "links": [{"type": "test_case", "url": "https://passport.zhihuishu.com/user/validateAccountAndPassword", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://passport.zhihuishu.com/user/validateAccountAndPassword", "name": "点击，跳转到对应BUG的链接地址"}]}